version: "3.8"

services:
  bitcoin:
    image: ruimarinho/bitcoin-core:latest
    container_name: bitcoin-node
    ports:
      - "8332:8332"
      - "18443:18443" # Make sure regtest RPC port is exposed
      - "28332:28332" # ZMQ ports
      - "28333:28333"
    volumes:
      - ./data/bitcoin:/home/bitcoin/.bitcoin
      - ./logs/bitcoin:/home/bitcoin/logs
    environment:
      - BITCOIN_RPCUSER=${BITCOIN_RPC_USER:-lnbhokycfu}
      - BITCOIN_RPCPASSWORD=${BITCOIN_RPC_PASSWORD:-2.%cr.3,ck\\UDiUtqjad[afR}
      - BITCOIN_NETWORK=${BITCOIN_NETWORK:-regtest}
      - BITCOIN_EXTRA_ARGS=-txindex=1 -rpcallowip=0.0.0.0/0 -rpcbind=0.0.0.0 -zmqpubrawblock=tcp://0.0.0.0:28332 -zmqpubrawtx=tcp://0.0.0.0:28333 -debug=1 -server=1
    restart: unless-stopped
    networks:
      - lightning-network

  lightning:
    image: lightninglabs/lnd:v0.19.0-beta.rc3
    container_name: lightning-node
    ports:
      - "9735:9735" # p2p
      - "10009:10009" # RPC port
    volumes:
      - ./data/lightning:/root/.lnd
      - ./logs/lightning:/root/logs
    command: >
      --bitcoin.active
      --bitcoin.regtest
      --bitcoin.node=bitcoind
      --bitcoind.rpchost=bitcoin:18443
      --bitcoind.rpcuser=lnbhokycfu
      --bitcoind.rpcpass=2.%cr.3,ck\\UDiUtqjad[afR
      --bitcoind.zmqpubrawblock=tcp://bitcoin:28332
      --bitcoind.zmqpubrawtx=tcp://bitcoin:28333
      --rpclisten=0.0.0.0:10009
      --restlisten=0.0.0.0:8080
      --noseedbackup
      --accept-keysend
      --allow-circular-route
      --tlsextraip=0.0.0.0
      --tlsextradomain=lightning-node
      --tlsautorefresh
      --debuglevel=debug
    depends_on:
      - bitcoin
    restart: unless-stopped
    networks:
      - lightning-network

  nginx:
    image: nginx:alpine
    container_name: lnd-proxy
    ports:
      - "8080:80" # Map container port 80 to host port 8080
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - lightning
    restart: unless-stopped
    networks:
      - lightning-network

networks:
  lightning-network:
    driver: bridge

volumes:
  bitcoin_data:
  lightning_data:
  rust_cargo_cache: # Persistent volume for Cargo registry
  rust_target_cache: # Persistent volume for build artifacts
